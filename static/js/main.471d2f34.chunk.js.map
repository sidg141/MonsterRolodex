{"version":3,"sources":["Components/card/card.component.jsx","Components/card-list-compont/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","obj","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","target","value","state","fetch","then","response","json","user","this","searchField","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAAAC,GACjB,OAAQ,sBAAKC,UAAU,iBAAf,UACJ,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BACKL,EAAMI,QAAQE,OAEnB,4BAAIN,EAAMI,QAAQG,YCLbC,EAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SAEED,EAAMI,QAAQK,KAAK,SAAAC,GAAG,OAAI,cAAC,EAAD,CAAmBN,QAASM,GAAjBA,EAAIL,UCJzCM,G,MAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,aAEnC,OAAO,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCNG,E,kDAnCb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAC,YAAcD,EAAEE,OAAOC,SAbtC,EAAKC,MAAQ,CACZ,QAAW,GACX,YAAc,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKR,SAAS,CAAC,QAAUQ,S,oBAMzC,WACE,MAAgCC,KAAKN,MAA9BjB,EAAP,EAAOA,QAAUwB,EAAjB,EAAiBA,YACXC,EAAkBzB,EAAQ0B,QAAQ,SAAA1B,GAAO,OAC7CA,EAAQE,KAAKyB,cAAcC,SAASJ,EAAYG,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACAW,YAAY,iBACZC,aAAcc,KAAKd,eAElB,cAAC,EAAD,CAAUT,QAASyB,W,GA9BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.471d2f34.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = props => {\r\n   return  <div className='card-container'>\r\n       <img alt='Monsters' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h3>\r\n            {props.monster.name}\r\n        </h3>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n}","import React from 'react';\r\nimport './card-list.style.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = props =>{\r\n    return <div className='card-list'>\r\n        {\r\n             props.monster.map( obj => <Card key={obj.id} monster={obj}/>)\r\n        }\r\n    </div>\r\n}","import React  from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) =>{\r\n\r\n    return <input \r\n           className='search'\r\n           type='search' \r\n           placeholder={placeholder}\r\n           onChange={handleChange}\r\n           \r\n           />\r\n}\r\n\r\n","import './App.css';\nimport React ,{ Component } from 'react';\nimport {CardList} from './Components/card-list-compont/card-list.component';\nimport { SearchBox } from './Components/search-box/search-box.component';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n     'monster' :[],\n     'searchField':''\n    }; \n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(user => this.setState({'monster':user}))\n  }\n  \n  handleChange = (e) => {\n    this.setState({'searchField':e.target.value});\n  }\n  render(){\n    const {monster , searchField} = this.state;\n    const filteredMonster = monster.filter( monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className='App'>\n        <h1>Monster Rolodex</h1>\n        <SearchBox \n        placeholder='Search Monster' \n        handleChange={this.handleChange}\n        />\n         <CardList monster={filteredMonster}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}